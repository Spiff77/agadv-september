{"ast":null,"code":"import { environment as env } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass SupplierHttpService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = env.apiUrl + 'suppliers';\n  }\n  add(supplier) {\n    return this.http.post(this.apiUrl, supplier);\n  }\n  delete(supplierId) {\n    return this.delete(supplierId);\n  }\n  update(supplier) {\n    return this.http.put(this.apiUrl + '/' + supplier.id, supplier);\n  }\n  findAll() {\n    return this.http.get(this.apiUrl);\n  }\n  findOne(id) {\n    return this.http.get(this.apiUrl + '/' + id);\n  }\n  static #_ = this.ɵfac = function SupplierHttpService_Factory(t) {\n    return new (t || SupplierHttpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SupplierHttpService,\n    factory: SupplierHttpService.ɵfac\n  });\n}\nexport { SupplierHttpService };","map":{"version":3,"names":["environment","env","SupplierHttpService","constructor","http","apiUrl","add","supplier","post","delete","supplierId","update","put","id","findAll","get","findOne","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["/Users/thomaslhomme/Documents/Dev/angular-advanced-materials/agadv/angular-adv/products/products-manager-adv-pre-auth/src/app/supplier-http.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {environment as env} from '../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Supplier} from './model/Supplier';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class SupplierHttpService {\n\n  private apiUrl = env.apiUrl + 'suppliers';\n\n  constructor(private http: HttpClient) { }\n\n  add(supplier: Supplier): Observable<Supplier>{\n    return this.http.post<Supplier>(this.apiUrl, supplier);\n  }\n\n  delete(supplierId: number): Observable<any>{\n    return this.delete(supplierId);\n  }\n\n  update(supplier: Supplier): Observable<Supplier>{\n    return this.http.put<Supplier>(this.apiUrl + '/' + supplier.id, supplier);\n  }\n\n  findAll(): Observable<Supplier[]> {\n    return this.http.get<Supplier[]>(this.apiUrl);\n  }\n\n  findOne(id: number): Observable<Supplier> {\n    return this.http.get<Supplier>(this.apiUrl + '/' + id);\n  }\n}\n"],"mappings":"AACA,SAAQA,WAAW,IAAIC,GAAG,QAAO,6BAA6B;;;AAK9D,MACaC,mBAAmB;EAI9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAGJ,GAAG,CAACI,MAAM,GAAG,WAAW;EAED;EAExCC,GAAGA,CAACC,QAAkB;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAW,IAAI,CAACH,MAAM,EAAEE,QAAQ,CAAC;EACxD;EAEAE,MAAMA,CAACC,UAAkB;IACvB,OAAO,IAAI,CAACD,MAAM,CAACC,UAAU,CAAC;EAChC;EAEAC,MAAMA,CAACJ,QAAkB;IACvB,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAAW,IAAI,CAACP,MAAM,GAAG,GAAG,GAAGE,QAAQ,CAACM,EAAE,EAAEN,QAAQ,CAAC;EAC3E;EAEAO,OAAOA,CAAA;IACL,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAa,IAAI,CAACV,MAAM,CAAC;EAC/C;EAEAW,OAAOA,CAACH,EAAU;IAChB,OAAO,IAAI,CAACT,IAAI,CAACW,GAAG,CAAW,IAAI,CAACV,MAAM,GAAG,GAAG,GAAGQ,EAAE,CAAC;EACxD;EAAC,QAAAI,CAAA,G;qBAxBUf,mBAAmB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnBpB,mBAAmB;IAAAqB,OAAA,EAAnBrB,mBAAmB,CAAAsB;EAAA;;SAAnBtB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}