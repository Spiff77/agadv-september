{"ast":null,"code":"import { environment as env } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductHttpService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = env.apiUrl + 'products';\n  }\n  add(product) {\n    return this.http.post(this.apiUrl, product);\n  }\n  delete(productId) {\n    return this.http.delete(this.apiUrl + '/' + productId);\n  }\n  update(product) {\n    return this.http.put(this.apiUrl + '/' + product.id, product);\n  }\n  findAll() {\n    return this.http.get(this.apiUrl);\n  }\n  findOne(id) {\n    return this.http.get(this.apiUrl + '/' + id);\n  }\n  static #_ = this.ɵfac = function ProductHttpService_Factory(t) {\n    return new (t || ProductHttpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductHttpService,\n    factory: ProductHttpService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ProductHttpService };","map":{"version":3,"names":["environment","env","ProductHttpService","constructor","http","apiUrl","add","product","post","delete","productId","update","put","id","findAll","get","findOne","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/thomaslhomme/Documents/Workspaces/webstormworkspace/products-manager-adv/src/app/product-http.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Product} from './model/Product';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {environment as env} from '../environments/environment';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductHttpService {\n\n  private apiUrl = env.apiUrl + 'products';\n\n  constructor(private http: HttpClient) { }\n\n  add(product: Product): Observable<Product>{\n    return this.http.post<Product>(this.apiUrl, product);\n  }\n\n  delete(productId: number): Observable<any>{\n    return this.http.delete<Product>(this.apiUrl + '/' + productId);\n  }\n\n  update(product: Product): Observable<Product>{\n    return this.http.put<Product>(this.apiUrl + '/' + product.id, product);\n  }\n\n  findAll(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.apiUrl);\n  }\n\n  findOne(id: number): Observable<Product> {\n    return this.http.get<Product>(this.apiUrl + '/' + id);\n  }\n}\n"],"mappings":"AAGA,SAAQA,WAAW,IAAIC,GAAG,QAAO,6BAA6B;;;AAG9D,MAGaC,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAGJ,GAAG,CAACI,MAAM,GAAG,UAAU;EAEA;EAExCC,GAAGA,CAACC,OAAgB;IAClB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAU,IAAI,CAACH,MAAM,EAAEE,OAAO,CAAC;EACtD;EAEAE,MAAMA,CAACC,SAAiB;IACtB,OAAO,IAAI,CAACN,IAAI,CAACK,MAAM,CAAU,IAAI,CAACJ,MAAM,GAAG,GAAG,GAAGK,SAAS,CAAC;EACjE;EAEAC,MAAMA,CAACJ,OAAgB;IACrB,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAAU,IAAI,CAACP,MAAM,GAAG,GAAG,GAAGE,OAAO,CAACM,EAAE,EAAEN,OAAO,CAAC;EACxE;EAEAO,OAAOA,CAAA;IACL,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAY,IAAI,CAACV,MAAM,CAAC;EAC9C;EAEAW,OAAOA,CAACH,EAAU;IAChB,OAAO,IAAI,CAACT,IAAI,CAACW,GAAG,CAAU,IAAI,CAACV,MAAM,GAAG,GAAG,GAAGQ,EAAE,CAAC;EACvD;EAAC,QAAAI,CAAA,G;qBAxBUf,kBAAkB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBpB,kBAAkB;IAAAqB,OAAA,EAAlBrB,kBAAkB,CAAAsB,IAAA;IAAAC,UAAA,EAFjB;EAAM;;SAEPvB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}